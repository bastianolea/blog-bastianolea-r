---
title: Predecir género a partir de nombres usando un modelo de lenguaje en R
author: Bastián Olea Herrera
date: '2024-11-11'
slug: []
categories: []
tags:
  - procesamiento de datos
  - inteligencia artificial
  - análisis de texto
---



[Hace poco](https://bastianolea.rbind.io/blog/introduccion_llm_mall/) conocí [el paquete `{mall}`](https://mlverse.github.io/mall/), que facilita mucho el uso de un un modelo grande de lenguaje (LLM) como una herramienta cotidiana para el análisis y procesamiento de datos. 

El paquete incluye varias funciones para usar un modelo LLM en una columna de un dataframe. `{mall}` te puede ayudar a :
- clasificar el contenido de una variable
- resumir textos
- extraer sentimiento a partir del texto
- extraer información desde el texto
- confirmar si algo es verdadero o falso a partir de un texto
- y también a aplicar cualquier prompt a una variable.

Recientemente lo usé para un caso real, donde tenía una columna de casi 2.000 nombres, y necesitaba asignarle un género a cada una de estas personas, solamente a partir de sus nombres y apellidos. 




``` r
library(dplyr) # manipulación de datos
library(readr) # cargar datos
library(tictoc) # medición de tiempo
library(mall) # aplicar modelos de lenguaje en dataframe
```



[Los datos provienen del servicio electoral de Chile](https://github.com/bastianolea/servel_scraping_votaciones), y los nombres corresponden a 1.576 candidatos y candidatas a alcaldías.

Con el siguiente código puedes descargar los datos listos para su uso:



``` r
archivo_remoto <- "https://raw.githubusercontent.com/bastianolea/servel_scraping_votaciones/refs/heads/main/datos/resultados_alcaldes_2024.csv"

candidatos <- readr::read_csv2(archivo_remoto) |> 
  select(nombres = candidato, partido, sector) |> 
  filter(nombres != "Nulo/Blanco")

candidatos
```

```
## # A tibble: 1,576 × 3
##    nombres                            partido sector       
##    <chr>                              <chr>   <chr>        
##  1 Marco Antonio Gonzalez Candia      RN      Derecha      
##  2 Veronica Maricel Cueto Cueto       IND     Independiente
##  3 Marcela Maritza Mansilla Potocnjak IND     Independiente
##  4 Alejandro Felipe Ricotti Sepulveda IND     Independiente
##  5 Carlos Orlando Tapia Aviles        IND     Independiente
##  6 Maria Luisa Hamilton Velasco       IND     Independiente
##  7 Gaston Dubournais Riveros          IND     Independiente
##  8 Marcela Chamorro Macias            IND     Izquierda    
##  9 Jose Andres Arellano Blanco        IND     Independiente
## 10 Andrea Elizabeth Galvez Sepulveda  REP     Derecha      
## # ℹ 1,566 more rows
```



En esta instancia, tengo configurado `{ollamar}` para que use el modelo Llama 3.2, de 3 billones de parámetros. Podemos instalar este modelo, o uno distinto, con estas instrucciones:




``` r
library(ollamar)
ollamar::pull("llama3.2") # descargar e instalar un modelo
mall::llm_use("ollama", "llama3.2") # elegir un modelo instalado
```




En una primera prueba, le entregamos al modelo de lenguaje la columna `nombres` (que contiene nombre, segundo nombre, apellido, y segundo apellido), y le pedimos al modelo que clasifique cada observación como _masculino_ o _femenino._















