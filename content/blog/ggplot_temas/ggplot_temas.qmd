---
title: Temas de colores personalizados para tus gr치ficos {ggplot2}
author: Basti치n Olea Herrera
date: '2025-08-26'
draft: false
freeze: true
format:
  hugo-md:
    output-file: "index"
    output-ext: "md"
slug: []
categories: []
tags:
  - visualizaci칩n de datos
  - ggplot2
  - gr치ficos
excerpt: "Darle un toque de color a tus gr치ficos produce visualizaciones con m치s personalidad y mayor impacto. Pero cambiar el color de cada elemento puede ser engorroso. Para ayudarte eso existe el paquete `{thematic}`. En este post vemos c칩mo usar `{thematic}` para cambiar f치cilmente los colores de fondo de tus gr치ficos."
---

Darle un toque de color a tus gr치ficos produce visualizaciones con **m치s personalidad** y **mayor impacto**. Pero cambiar el color de cada elemento puede ser engorroso. Para ayudarte con eso existe el [paquete `{thematic}`](https://rstudio.github.io/thematic/)! En este post vemos c칩mo usar `{thematic}` para cambiar f치cilmente los colores de tus gr치ficos.

Primero generemos datos al azar para crear una visualizaci칩n de demostraci칩n:

```{r}
#| message: false
#| warning: false
library(dplyr)

# crear datos al azar
datos <- tibble(a = 1:10,
                b = rnorm(10, mean = 7, sd = 2)
                )
```

Ahora creemos un gr치fico b치sico:
```{r}
library(ggplot2)

grafico <- datos |> 
  ggplot() +
  aes(x = as.factor(a), y = b) +
  geom_col(width = 0.5) +
  geom_text(aes(label = round(b, 0), y = b + 0.6), 
            size = 3, fontface = "bold")

grafico
```

Agreguemos algunas capas extra para mejorar la apariencia de nuestro gr치fico:
```{r}
grafico <- grafico +
  labs(title = "Gr치fico de barras",
       subtitle = "N칰meros al azar",
       x = "Eje horizontal", y = "Eje vertical",
       caption = "Fuente: de los deseos") +
  scale_y_continuous(expand = expansion(c(0, 0.05))) +
  theme(plot.title = element_text(face = "bold"),
        panel.grid.minor.y = element_line(linetype = 2, linewidth = .5),
        axis.ticks.x = element_blank())

grafico
```

Ahora que tenemos un gr치fico, probemos `{thematic}`. La idea es que tenemos que _activar_ la funci칩n que genera los temas con `thematic_on()`, y en el momento que la activamos, definimos los **colores principales** de nuestro tema. Estos colores son de **fondo** (`bg`) y de **frente** (`fg`), que como su nobre lo indica, definen el color base del gr치fico y el color de los elementos principales.

```{r}
#| warning: false
library(thematic)

thematic_on(fg = "#553A74",
            bg = "#EAD2FA")

grafico
```

Solamente con definir dos colores con `thematic_on()` e imprimir el gr치fico obtenemos el gr치fico con el tema aplicado. Muy lindo 游눞

Para encontrar pares de colores interesantes, recomiendo el sitio [Pigment](https://pigment.shapefactory.co), que genera pares de colores a los que puedes ajustar su saturaci칩n y su nivel de iluminaci칩n.

{{< imagen "pigment.png" >}}

Veamos algunos ejemplos de como queda el mismo gr치fico con otros pares de colores: 

```{r}
#| eval: false
#| echo: false
thematic_on(fg = "#BC513D",
            bg = "#E9E1C1")

grafico
```


```{r}
thematic_on(fg = "#6A3F5B",
            bg = "#E28B9F")

grafico
```

```{r}
thematic_on(fg = "#81BFC3",
            bg = "#684D5B")

grafico
```

```{r}
thematic_on(fg = "#524337",
            bg = "#C4B495")

grafico
```

Para desactivar la aplicaci칩n del tema de colores, usa `thematic_off()` y volver치s a la aburrida normalidad.

```{r}
thematic_off()

grafico
```

춰As칤 de simple! Claramente es una forma **b치sica y r치pida** de personalizar la apariencia de las visualizaciones, pero el resultado suele ser positivo considerando el poqu칤simo esfuerzo necesario para lograrlo. Eficiencia, yey! 游봃

{{< cafecito >}}
{{< cursos >}}