---
title: An√°lisis de sentimiento usando modelos de lenguaje (LLM) locales en R
author: Basti√°n Olea Herrera
date: '2024-12-22'
slug: []
format: "hugo-md"
draft: false
freeze: true
tags:
  - an√°lisis de texto
  - inteligencia artificial
categories: 
  - tutoriales
editor_options: 
  chunk_output_type: console
execute: 
  freeze: true
---

El an√°lisis de sentimientos es una t√©cnica de an√°lisis de texto donde se aplican distintos algoritmos para poder clasificar textos de distinta longitud y complejidad en un conjunto preestablecido de categor√≠as relacionadas al sentimiento de dichos textos. Con el _sentimiento_ de los textos nos referimos a la informaci√≥n subjetiva que entregan estos textos, as√≠ como los afectos que producen. Por ejemplo, ‚Äúodio a mi gato‚Äù versus ‚Äúmi gatita es tan tierna‚Äù son dos textos que expresan distintos niveles de negatividad/positividad, agresividad, ternura, etc√©tera.  Las categor√≠as del an√°lisis del sentimiento suelen ser _positivo, neutro_ y _negativo,_ u otras m√°s complejas, como agrado (agradable/desagradable), activaci√≥n (activo/pasivo), entre otros.

En otras palabras, la aplicaci√≥n de un an√°lisis de sentimiento a un conjunto de textos nos permitir√≠a clasificar estos textos en categor√≠as como positivo, neutro y negativo, en base a la forma en que describen el tema del que tratan, o bien, cualidades de las palabras que se usen dentro del texto.

El an√°lisis de sentimiento usualmente es un medio para poder contar con nueva informaci√≥n que nos permita desarrollar nuevos an√°lisis. En este sentido, la nueva variable de sentimiento resulta √∫til de ser cruzada con otras variables acerca del texto, tales como variables que identifiquen la autor√≠a del texto, su fuente, quien enuncia el texto, de qu√© trata el texto, etc.

Algunos usos del an√°lisis de sentimiento son: 
- Evaluar si los textos dentro de un conjunto de textos o _corpus_ son positivos o negativos,
- Correlacionar si los textos de distintos autores difieren en sus sentimientos,
- Analizar si textos sobre determinadas tem√°ticas se correlacionan con sentimientos espec√≠ficos,
- Estudiar si ciertos temas son tratados de una forma espec√≠fica por ciertos autores, y de una forma distinta por otros
- Comparar si textos sobre un mismo tema son expuestos de forma distinta por distintos autores o fuentes

Pensemos en el ejemplo de un conjunto de art√≠culos de prensa o noticias, cada uno con fecha y el medio de comunicaci√≥n del que proviene. Si hacemos una selecci√≥n de noticias sobre un tema espec√≠fico, podr√≠amos analizar c√≥mo cambia el sentimiento dominante con el que se plantea la tem√°tica en distintos momentos del tiempo, o si dos medios de comunicaci√≥n representan una misma tem√°tica bajo distinto sentimiento.

```{r}
#| message: false
library(dplyr)
library(readr)
```

Probemos haciendo un an√°lisis de sentimiento a partir de un corpus de textos de noticias chilenas publicadas el a√±o 2024. Los datos son obtenidos de [este repositorio de obtenci√≥n automatizada de textos de noticias de prensa escrita chilena.](https://github.com/bastianolea/prensa_chile)

```{r}
#| eval: false
# direcci√≥n web donde se encuentran los datos
url_datos <- "https://raw.githubusercontent.com/bastianolea/prensa_chile/refs/heads/main/datos/prensa_datos_muestra.csv"

# lectura de los datos ubicados en internet
noticias <- read_csv2(url_datos)

# extracci√≥n de una marcha aleatoria de 20 noticias
noticias_muestra <- noticias |> 
  slice_sample(n = 20)
```

```{r guardar}
#| eval: false
#| echo: false
noticias_muestra |> write_rds("content/blog/analisis_sentimiento_llm/muestra.rds")
```

```{r cargar}
#| eval: true
#| echo: false
noticias_muestra <- read_rds("muestra.rds")
```


En el c√≥digo anterior, identificamos la ubicaci√≥n de los datos que usaremos de prueba, que corresponden a un conjunto de 3000 noticias p√∫blicas del a√±o 2024, y cargamos los datos directamente desde internet. Como se trata de una prueba, reduciremos la cantidad de noticias a tan s√≥lo 20:

```{r}
noticias_muestra
```

Los datos tienen una columna con el t√≠tulo, otra con el cuerpo de la noticia, y finalmente la fuente de la noticia y su fecha de publicaci√≥n.

## Configuraci√≥n del modelo de lenguaje local
Para poder usar modelos LLM localmente con R, [tenemos que instalar Ollama](https://ollama.com/) en nuestro equipo, que es la aplicaci√≥n que nos permite obtener y usar modelos de lenguaje locales, y ejecutar la aplicaci√≥n en nuestro computador. Ollama tiene que estar abierto para poder proveer del modelo a nuestra sesi√≥n de R. 

Luego, ya sea desde Ollama o desde R, tenemos que instalar un modelo de lenguaje. Desde R, es tan simple como ejecutar: `ollamar::pull("llama3.2:1b")`, definiendo el [modelo](https://ollama.com/search) que queremos instalar. Al elegir un modelo, debes considerar las capacidades de tu computador para ejecutar los modelos, y que el tama√±o del modelo es directamente proporcional con la calidad de sus respuestas[^1].

[^1]: Si tu computador es muy b√°sico (tiene poca memoria RAM), recomiendo instalar Llama 3.2 1B. Si tiene al menos 8GB de memoria, recomiendo Llama 3.2 3B. Si tienes suficiente memoria (m√°s de 8GB), recomiendo Llama 3.1 8B.

Una vez tengas Ollama abierto en tu computador, y un modelo previamente instalado, puedes proceder a usarlo en R en el siguiente paso.


## Extracci√≥n de sentimiento a partir del texto
Para realizar el an√°lisis de sentimiento, utilizaremos la ayuda de un modelo de lenguaje de gran tama√±o (LLM), los cuales est√°n entrenados para este tipo de tareas. Cargamos [el paquete {mall} para uso de LLMs en R](https://mlverse.github.io/mall/#get-started), y {beepr} para anunciar con una campanita cuando se termine el procesamiento, porque puede tardar unos minutos.

```{r}
#| eval: false
library(mall)
library(beepr)

# ollamar::pull("llama3.1:8b") # instalar modelo
llm_use("ollama", "llama3.1:8b") # cargar modelo
```

La [funci√≥n `llm_sentiment()` del paquete {mall}](https://mlverse.github.io/mall/#sentiment) facilita la extracci√≥n del sentimiento a partir del texto. Tan s√≥lo es necesario indicar la columna que contiene el texto, y las categor√≠as de sentimiento que deseamos obtener. Por medio del siguiente c√≥digo, se alimenta al modelo de lenguaje con cada uno de los textos, y se le pide obtener como respuesta si el texto es positivo, neutro o negativo. 

```{r procesar}
#| eval: false
#| echo: true
noticias_sentimiento <- noticias_muestra |> 
  llm_sentiment(cuerpo, 
                pred_name = "sentimiento",
                options = c("positivo", "neutro", "negativo"))
beep()
```

```{r guardar2}
#| eval: false
#| echo: false
noticias_sentimiento |> write_rds("content/blog/analisis_sentimiento_llm/resultados.rds")
```

```{r cargar2}
#| eval: true
#| echo: false
noticias_sentimiento <- read_rds("resultados.rds")
```

En mi computador personal, este proceso en total tom√≥ 88 segundos, lo que significa que tarda aproximadamente cuatro segundos por cada texto que el modelo analiza y clasifica. Esto depende de las capacidades gr√°ficas de tu computador, y del largo del texto. Las noticias suelen tener como m√≠nimo varios cientos de palabras, lo que hace que el proceso sean un poco m√°s lento.

A continuaci√≥n, vemos los resultados del an√°lisis de sentimiento:
```{r}
noticias_sentimiento |> 
  select(sentimiento, titulo)

noticias_sentimiento |> 
  select(sentimiento) |> 
  table()
```


### Conclusi√≥n

Revisando los resultados a la r√°pida, vemos que una noticia sobre un sismo es aparentemente **neutra**, probablemente por la forma en que est√© redactada. Noticias sobre la aprobaci√≥n de un proyecto de ley, la presentaci√≥n de nuevas tecnolog√≠as, o beneficios para personas afectadas por incendios, son interpretadas como **positivas**. Por √∫ltimo, noticias sobre frentes de mal tiempo, operaciones policiales, funerales, cr√≠menes y asesinatos son interpretadas como **negativas**. Tambi√©n, vemos que una noticia donde una ministra interpreta una jornada como dif√≠cil tambi√©n es negativa, y otra donde se critica al mandatario de un pa√≠s por sus actos tambi√©n.

En este sentido, el desempe√±o de aplicar el modelo de lenguaje para obtener el sentimiento de los textos parece satisfactorio. De forma automatizada, y sin intervenci√≥n ni supervisi√≥n humana, hemos obtenido valiosa informaci√≥n que resume un aspecto del significado codificado en los textos.

A partir de esta nueva variable, podemos proceder, por ejemplo, a detectar noticias que contienen ciertos conceptos, y analizar si dicha tem√°tica se trata mayormente de forma positiva o negativa. O si est√° positividad o negatividad var√≠a a trav√©s de las distintas fuentes de informaci√≥n, momentos en el tiempo, u otras particularidades del texto. 

### Consideraciones 

Los resultados siempre van a depender de la calidad de los datos que alimentes al modelo. Tambi√©n es necesario considerar que, debido a que los modelos de lenguaje no son deterministas, los resultados siempre pueden variar. En otras palabras, si analiza el sentimiento de un mismo texto m√∫ltiples veces, puede que los resultados sean levemente distintos. Teniendo esto en consideraci√≥n, es importante ser cr√≠ticos al momento de recibir resultados de un modelo de lenguaje o de cualquier otra herramienta de inteligencia artificial, y tambi√©n considerar estos resultados como convenientes intentos de aproximaci√≥n a la realidad: por un lado, los modelos de lenguaje facilitan muchas tareas, pero por otro, nunca podemos fiarnos 100% de sus resultados, sobre todo cuando estamos tratando con tem√°ticas complejas como son el significado expresado por textos que reflejan facetas complejas de la realidad social y pol√≠tica.


----


Si este tutorial te sirvi√≥, por favor considera hacerme una peque√±a donaci√≥n para poder tomarme un cafecito mientras escribo el siguiente tutorial ü•∫

```{=html}
<div style = "height: 18px;">
</div>
<div>
  <div style="display: flex;
  justify-content: center;
  align-items: center;">
    <script type="text/javascript" src="https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js" data-name="bmc-button" data-slug="bastimapache" data-color="#FFDD00" data-emoji="‚òï"  data-font="Cookie" data-text="Reg√°lame un cafecito" data-outline-color="#000000" data-font-color="#000000" data-coffee-color="#ffffff" ></script>
  </div>
```