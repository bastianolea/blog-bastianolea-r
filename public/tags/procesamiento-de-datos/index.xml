<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Procesamiento de datos on Blog</title>
    <link>https://bastianoleah.netlify.app/tags/procesamiento-de-datos/</link>
    <description>Recent content in Procesamiento de datos on Blog</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Wed, 15 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://bastianoleah.netlify.app/tags/procesamiento-de-datos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Validación de datos con {testthat} y {pointblank}</title>
      <link>https://bastianoleah.netlify.app/blog/validacion_avanzada/</link>
      <pubDate>Wed, 15 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/validacion_avanzada/</guid>
      <description>&lt;a href=&#34;pointblank-1.png&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;pointblank-1.png&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;En un &#xA;&lt;a href=&#34;../../../blog/validacion_basica&#34;&gt;post anterior&lt;/a&gt; hablé sobre cómo hacer validación básica de datos en R. A grandes razgos, vimos la utilidad de crear funciones que contengan pruebas simples para validar la calidad de tus datos, tales como revisar cantidad de filas, cantidad de datos perdidos, y otros.&lt;/p&gt;&#xA;&lt;p&gt;Dado que R es un lenguaje enfocado en el análisis de datos, existen varios paquetes que nos pueden ayudar con la validación de datos!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unir o cruzar datos con left_join()</title>
      <link>https://bastianoleah.netlify.app/blog/left_join/</link>
      <pubDate>Sat, 16 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/left_join/</guid>
      <description>&lt;p&gt;El &lt;em&gt;left join&lt;/em&gt; es una de las operaciones básicas del trabajo con datos, en el sentido de que realiza una operación sencilla que a la vez es muy útil. Sirve tanto para limpiar datos como para procesarlos y obtener nuevas relaciones entre ellos.&lt;/p&gt;&#xA;&lt;p&gt;Un &lt;em&gt;left join&lt;/em&gt; realiza una unión o combinación entre dos tablas de datos a partir de una variable en común o &lt;em&gt;clave&lt;/em&gt; (&lt;em&gt;key&lt;/em&gt;). En otras palabras, un &lt;em&gt;left join&lt;/em&gt; toma dos tablas que tienen datos distintos, pero que comparten una variable o columna en común, y usa esta variable en común para &lt;strong&gt;unir las observaciones de ambas tablas&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crea planillas de Excel con formato personalizado desde R con {openxlsx}</title>
      <link>https://bastianoleah.netlify.app/blog/excel_openxlsx/</link>
      <pubDate>Fri, 08 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/excel_openxlsx/</guid>
      <description>&lt;p&gt;Al terminar el procesamiento o limpieza de un conjunto de datos, usualmente necesitamos &lt;em&gt;entregar&lt;/em&gt; la base en un formato más amigable para otros colegas o usuarios/as, lo que significa: Excel. Exportar datos de R a Excel es fácil: con la función &lt;code&gt;writexl::write_xlsx()&lt;/code&gt; podemos guardar cualquier dataframe en Excel. Pero esta función hace sólo eso, y el archivo resultante es básico y hasta feo.&lt;/p&gt;&#xA;&lt;p&gt;Sin embargo, existe el &#xA;&lt;a href=&#34;https://ycphs.github.io/openxlsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paquete &lt;code&gt;{openxlsx}&lt;/code&gt;&lt;/a&gt;, que además de leer y escribir archivos Excel, nos entrega funciones para generar archivos Excel desde R que contengan &lt;strong&gt;todo tipo de formato, estilo de tablas, y manipulación celda por celda&lt;/strong&gt; del archivo resultante, con lo que podemos &lt;strong&gt;generar planillas de Excel atractivas desde R.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Validación básica de datos con R</title>
      <link>https://bastianoleah.netlify.app/blog/validacion_basica/</link>
      <pubDate>Thu, 07 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/validacion_basica/</guid>
      <description>&lt;p&gt;Si estás procesando muchos datos y/o datos que vienen de distintas fuentes con R, validarlos puede ayudarte a encontrar problemas antes de que sea tarde! 😱&lt;/p&gt;&#xA;&lt;p&gt;¿Qué es la validación de datos? Son las distintas pruebas que crearemos para &lt;strong&gt;confirmar que nuestros datos cumplen ciertos criterios&lt;/strong&gt;. El objetivo es entregarnos la &lt;strong&gt;certeza&lt;/strong&gt; de que nuestros datos son como esperamos luego de procesarlos. Para lograrlo, ponemos a prueba nuestros datos en distintos puntos de nuestros procesos de análisis de datos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Procesamiento de datos multiprocesador en R con {furrr}</title>
      <link>https://bastianoleah.netlify.app/blog/furrr_multiprocesador/</link>
      <pubDate>Thu, 12 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/furrr_multiprocesador/</guid>
      <description>&lt;p&gt;La mayoría de las funciones de R, así como R mismo, se ejecutan en un único proceso dentro de tu computadora, dado que R es un software de un sólo hilo (&lt;em&gt;single threaded&lt;/em&gt;).&lt;/p&gt;&#xA;&lt;p&gt;Los computadores modernos en general tienen entre 2 y 8 núcleos (&lt;em&gt;cores&lt;/em&gt;), algunos incluso muchos más. Una mayor cantidad de núcleos o procesadores permite a tu computadora hacer más &lt;strong&gt;operaciones paralelas&lt;/strong&gt;. Por ejemplo, si tu computador tiene 6 núcleos y R está procesando datos, R usará 1 núcleo al 100%, y te quedarán 5 núcleos en desuso, que podrían estar ejecutando otras tareas. En otras palabras, R está usando sólo el 100% de tu computador, cuando podría estar usando el 600%.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Predecir género a partir de nombres usando un modelo de lenguaje en R</title>
      <link>https://bastianoleah.netlify.app/blog/genero_nombres_llm/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/genero_nombres_llm/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://bastianolea.rbind.io/blog/introduccion_llm_mall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hace poco&lt;/a&gt; conocí &#xA;&lt;a href=&#34;https://mlverse.github.io/mall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;el paquete &lt;code&gt;{mall}&lt;/code&gt;&lt;/a&gt;, que facilita mucho el uso de un un modelo de lenguaje (LLM) local como una herramienta cotidiana para el análisis y procesamiento de datos.&lt;/p&gt;&#xA;&lt;p&gt;El paquete incluye varias funciones para usar un modelo LLM local en las columnas de un dataframe. &lt;code&gt;{mall}&lt;/code&gt; te puede ayudar a :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;clasificar el contenido de una variable&lt;/li&gt;&#xA;&lt;li&gt;resumir textos&lt;/li&gt;&#xA;&lt;li&gt;extraer sentimiento a partir del texto&lt;/li&gt;&#xA;&lt;li&gt;extraer información desde el texto&lt;/li&gt;&#xA;&lt;li&gt;confirmar si algo es verdadero o falso a partir de un texto&lt;/li&gt;&#xA;&lt;li&gt;y también a aplicar cualquier &lt;em&gt;prompt&lt;/em&gt; a una variable.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Recientemente lo usé para un caso real, donde tenía una columna de casi 2.000 nombres, y necesitaba asignarle un género a cada una de estas personas, solamente a partir de sus nombres y apellidos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video: Taller Aplicación de la Ciencia de Datos en la Gestión Municipal</title>
      <link>https://bastianoleah.netlify.app/blog/unim/taller_ciencia_de_datos_gestion_municipal/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/unim/taller_ciencia_de_datos_gestion_municipal/</guid>
      <description>&lt;p&gt;Tuve el privilegio de exponer en la &lt;strong&gt;Universidad Internacional de la Municipalidad de Rancagua&lt;/strong&gt;, un espacio de diálogo, aprendizaje y colaboración, organizado por el &lt;strong&gt;Programa de Gobierno Local Abierto&lt;/strong&gt; (GOBLA) de la Municipalidad de Rancagua.&lt;/p&gt;&#xA;&lt;p&gt;Presenté un taller dirigido a funcionarios y funcionarias municipales sobre Aplicación de la ciencia de datos en la Gestión Municipal, donde comuniqué la importancia de manejar herramientas de progamación para le análisis de datos, favoreciendo el desarrollo de herramientas reutilizables, reproducibles, transparentes y abiertas.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Contar días hábiles entre dos fechas en R</title>
      <link>https://bastianoleah.netlify.app/blog/contar_dias_habiles/</link>
      <pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/contar_dias_habiles/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;dplyr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# manipulación de datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;lubridate&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# trabajar con fechas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;RQuantLib&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# paquete con calendarios&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;bizdays&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# paquete para contar días hábiles&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hoy se me planteó un pequeño desafío que no había tenido que hacer antes. Tenía que contar la cantidad de días entre dos fechas.&lt;/p&gt;&#xA;&lt;p&gt;Esto no es particularmente complejo, de hecho es demasiado fácil:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;h3 id=&#34;contar-la-cantidad-de-días-entre-dos-fechas&#34;&gt;Contar la cantidad de días entre dos fechas&#xA;  &lt;a href=&#34;#contar-la-cantidad-de-d%c3%adas-entre-dos-fechas&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;&#xA;      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;&#xA;    &lt;/svg&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Primero definimos las dos fechas:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparar el rendimiento expresiones en R</title>
      <link>https://bastianoleah.netlify.app/blog/benchmark_ejemplo/</link>
      <pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/benchmark_ejemplo/</guid>
      <description>&lt;p&gt;Al programar algo, siempre existen varias formas de lograr un mismo objetivo. Un criterio para elegir una forma por sobre otra puede ser el rendimiento: si hay dos formas de hacer algo, elegir la forma que se ejecute más rápido.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;Para comparar el rendimiento de distintas expresiones en R, realizamos un &lt;em&gt;benchmark,&lt;/em&gt; al cual le entregamos las expresiones que queremos comparar, y nos entregará un detalle de su velocidad de ejecución, consumo de memoria, y otros.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualización y scraping de resultados en vivo de las elecciones municipales 2024</title>
      <link>https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/</link>
      <pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/servel_resultados_multi_featured.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Con motivo de las elecciones municipales, estuve generando algunas visualizaciones ”en tiempo real” de los resultados de las elecciones de alcaldías. Los datos de conteo de votos los fui obteniendo minuto a minuto mediante web scraping con &lt;code&gt;{RSelenium}&lt;/code&gt;, que permite programar un navegador web para que interactúe con un sitio como si fuera humano. Entonces, el navegador robot (marioneta, le llaman) iba apretando todos los botones, sin intervención de mi parte, para encontrar y copiar los resultados de cada comuna del país.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evitar que un loop se detenga debido a errores</title>
      <link>https://bastianoleah.netlify.app/blog/evitar_errores/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/evitar_errores/</guid>
      <description>&lt;p&gt;Usando el paquete &lt;code&gt;{purrr}&lt;/code&gt; para realizar iteraciones o &lt;em&gt;loops&lt;/em&gt; en nuestro código, vamos a probar tres escenarios ante los que un loop se detendría debido a un error, y formas de solucionarlo.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;purrr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;números&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f6c177&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En el primer escenario, el loop intenta sumar &lt;code&gt;100&lt;/code&gt; a un vector de números, pero se encuentra con que uno de los números es un texto, por lo tanto la ejecución se detiene con un error:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
