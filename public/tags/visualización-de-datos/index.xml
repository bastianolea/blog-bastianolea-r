<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Visualización de datos on Bastián Olea</title>
    <link>https://bastianoleah.netlify.app/tags/visualizaci%C3%B3n-de-datos/</link>
    <description>Recent content in Visualización de datos on Bastián Olea</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Tue, 26 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://bastianoleah.netlify.app/tags/visualizaci%C3%B3n-de-datos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tutorial: visualización de datos con {ggplot2}</title>
      <link>https://bastianoleah.netlify.app/blog/r_introduccion/tutorial_visualizacion_ggplot/</link>
      <pubDate>Fri, 21 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/r_introduccion/tutorial_visualizacion_ggplot/</guid>
      <description>&lt;a href=&#34;ggplot2-featured.jpg&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;ggplot2-featured.jpg&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;&lt;code&gt;{ggplot2}&lt;/code&gt; es una librería de visualización de datos bastante popular en el mundo de la ciencia de datos. Sus principales características son su atractivo, su conveniencia para la exploración de datos, un gran potencial de personalización, y un extenso ecosistema de extensiones que nos permiten generar visualizaciones prácticamente de cualquier tipo.&lt;/p&gt;&#xA;&lt;p&gt;Otro beneficio de usarlo es propio de el uso de cualquier herramienta programática para generar resultados en el ámbito del análisis de datos: la reusabilidad del código, que nos permite especificar una sola vez el resultado que queremos y luego volver a aplicarlo infinitas veces con distintos datos, datos actualizados, o variaciones de un conjunto de datos, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Temas de colores personalizados para tus gráficos {ggplot2}</title>
      <link>https://bastianoleah.netlify.app/blog/ggplot_temas/</link>
      <pubDate>Tue, 26 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/ggplot_temas/</guid>
      <description>&lt;p&gt;Darle un toque de color a tus gráficos produce visualizaciones con &lt;strong&gt;más personalidad&lt;/strong&gt; y &lt;strong&gt;mayor impacto&lt;/strong&gt;. Pero cambiar el color de cada elemento puede ser engorroso. Para ayudarte con eso existe el &#xA;&lt;a href=&#34;https://rstudio.github.io/thematic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paquete &lt;code&gt;{thematic}&lt;/code&gt;&lt;/a&gt;! En este post vemos cómo usar &lt;code&gt;{thematic}&lt;/code&gt; para cambiar fácilmente los colores de tus gráficos.&lt;/p&gt;&#xA;&lt;p&gt;Primero generemos datos al azar para crear una visualización de demostración:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;dplyr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6e6a86&#34;&gt;# crear datos al azar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;datos&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;tibble&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f6c177&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#ea9a97&#34;&gt;b&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;rnorm&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f6c177&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;mean&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;sd&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Ahora creemos un gráfico básico:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tipografías personalizadas en gráficos {ggplot2}</title>
      <link>https://bastianoleah.netlify.app/blog/ggplot_tipografias/</link>
      <pubDate>Tue, 26 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/ggplot_tipografias/</guid>
      <description>&lt;p&gt;¿Quieres darle un toque personalizado a tus gráficos? O tal vez alinearlos mejor al mensaje que quieres entregar, o a los lineamientos estéticos de tu organización. En esta breve guía te explico cómo cambiar las tipografías, tipos de letra o fuentes de tus gráficos hechos en R &#xA;&lt;a href=&#34;../../../tags/ggplot2/&#34;&gt;con &lt;code&gt;{ggplot2}&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;a href=&#34;featured.png&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;featured.png&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;Para demostrar, primero creemos datos ficticios siguiento distribuciones normales:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Echa un vistazo preliminar a tus datos con {visdat}</title>
      <link>https://bastianoleah.netlify.app/blog/visdat/</link>
      <pubDate>Fri, 08 Aug 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/visdat/</guid>
      <description>&lt;p&gt;En una clase reciente me preguntaron cómo saber de una dónde hay datos perdidos o &lt;em&gt;missing&lt;/em&gt; en un conjunto de datos. La respuesta que di fue usar &lt;code&gt;summarize()&lt;/code&gt; para contar la cantidad de datos perdidos en todas las columnas de un dataframe:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;dplyr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# manipulación de datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;messy&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# ensuciar datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6e6a86&#34;&gt;# agregar datos perdidos al azar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;iris_m&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;iris&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;messy&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;make_missing&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;cols&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;names&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;iris&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;iris_m&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# resumir los datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;summarize&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6e6a86&#34;&gt;# en todas las columnas&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ea9a97&#34;&gt;across&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;everything&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#6e6a86&#34;&gt;# contar la cantidad de missing&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#908caa&#34;&gt;~&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;is.na&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;.x&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;  Sepal.Length Sepal.Width Petal.Length Petal.Width Species&#xA;1           10          13           11          17      12&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Pero hay formas más convenientes de hacerlo!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gráfico de mis artistas y géneros musicales más escuchados según Last.fm</title>
      <link>https://bastianoleah.netlify.app/blog/2025-07-28/</link>
      <pubDate>Wed, 30 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/2025-07-28/</guid>
      <description>&lt;a href=&#34;camcorder4.webp&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;camcorder4.webp&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.last.fm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Last.fm&lt;/a&gt; es una plataforma donde las personas van registrando la música que escuchan diariamente, y luego pueden obtener estadísticas sobre sus gustos musicales y recomendaciones basadas en los gustos de usuarios similares.&lt;/p&gt;&#xA;&lt;p&gt;Tenía ganas de reproducir en R uno de los gráficos que aparecen en el reporte mensual:&lt;/p&gt;&#xA;&lt;a href=&#34;inspo.png&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;inspo.png&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;Así que me apliqué con &lt;code&gt;{ggplot2}&lt;/code&gt;, usando un paquete que agrega una visualización similar, y usando otro paquete para descargar los datos de mi perfil de Last.fm.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video: Taller Medición y Análisis de la Corrupción en Chile desde el Análisis de Datos y Herramientas Abiertas</title>
      <link>https://bastianoleah.netlify.app/blog/taller_corrupcion_cesi/</link>
      <pubDate>Wed, 23 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/taller_corrupcion_cesi/</guid>
      <description>&lt;p&gt;Taller online que impartí para el &lt;em&gt;Congreso Estudiantil de Sociología Interdisciplinaria.&lt;/em&gt; En este taller introduje a estudiantes de sociología al lenguaje de programación R, explicando los beneficios del análisis de datos desarrollado en flujos de trabajo basados en la programación, y las posibilidades que se abren para producir estudios y obtener resultados usando código. Puse énfasis en el uso de tecnologías y datos abiertos, y en el principal beneficio de la programación (en mi opinión): el poder actualizar resultados, aplicaciones y visualizaciones automáticamente.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generar múltiples gráficos automáticamente con R</title>
      <link>https://bastianoleah.netlify.app/blog/ggplot_purrr/</link>
      <pubDate>Mon, 14 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/ggplot_purrr/</guid>
      <description>&lt;p&gt;Uno de los principales beneficios del análisis de datos en base a programación es que &lt;strong&gt;el código es reutilizable.&lt;/strong&gt; Esto significa que cualquier cosa que hayas hecho puedes &lt;strong&gt;reutilizarla&lt;/strong&gt;, y así ahorrar trabajo. El siguiente paso es reutilizar el código de tal forma que sirva para aplicarlo a varios casos a la vez, incluso cientos o miles de veces.&lt;/p&gt;&#xA;&lt;p&gt;La reutilización de código es súper conveniente para la visualización de datos: una vez que diseñaste un gráfico, con muy pocas modificaciones puedes adaptarlo para que funcione con una fuente de datos distintas, una fuente actualizada, o para que visualice distintas variables.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Etiquetas de texto que se repelen entre sí con {ggrepel}</title>
      <link>https://bastianoleah.netlify.app/blog/ggrepel/</link>
      <pubDate>Fri, 11 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/ggrepel/</guid>
      <description>&lt;link href=&#34;index_files/libs/htmltools-fill-0.5.8.1/fill.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/htmlwidgets-1.6.4/htmlwidgets.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-bundle-5.16.0/d3-bundle.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-lasso-0.0.5/d3-lasso.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/save-svg-as-png-1.4.17/save-svg-as-png.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/flatbush-4.4.0/flatbush.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link href=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/girafe-binding-0.8.13/girafe.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;En este post veremos cómo mejorar visualizaciones de datos a las que queremos agregarle texto que identifique las observaciones, aún cuando las observaciones son demasiadas como para etiquetarlas a todas. Usaremos el &#xA;&lt;a href=&#34;https://ggrepel.slowkow.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paquete de R &lt;code&gt;{ggrepel}&lt;/code&gt;&lt;/a&gt; para etiquetar puntos en un gráfico con textos que se repelen entre sí de forma automática.&lt;/p&gt;&#xA;&lt;div style=&#34;padding:18px; background-color:#493365; color:#E9DDEE; border-radius:6px;&#xA;margin:20px; margin-top:26px; margin-bottom:20px; margin-left:40px; margin-right:40px;&#xA;font-size:90%;&#34;&gt;&#xA;&#xA;Este post requiere conocimientos de &lt;code&gt;{ggplot2}&lt;/code&gt;. Si quieres aprender a hacer gráficos en R, revisa &#xA;&lt;a href=&#34;https://bastianoleah.netlify.app/blog/r_introduccion/tutorial_visualizacion_ggplot/&#34;&gt;este tutorial sobre visualización de datos&lt;/a&gt; primero.&#xA;&#xA;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;h3 id=&#34;datos&#34;&gt;Datos&#xA;  &lt;a href=&#34;#datos&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;&#xA;      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;&#xA;    &lt;/svg&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;A modo de ejemplo, usaremos datos del &#xA;&lt;a href=&#34;https://www.bcn.cl/procesoconstituyente/plebiscito2020&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;plebiscito de entrada de 2020 en Chile&lt;/a&gt;, obtenidos desde el &#xA;&lt;a href=&#34;https://github.com/bastianolea/plebiscitos_chile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;repositorio de datos sobre los plebiscitos constitucionales&lt;/a&gt;. Éste repositorio, parte de mi &#xA;&lt;a href=&#34;https://bastianolea.github.io/datos_sociales/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mini sitio de datos sociales chilenos&lt;/a&gt;, ofrece versiones limpias y listas para usar de los resultados electorales de estos procesos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Análisis y visualización de correlaciones en R</title>
      <link>https://bastianoleah.netlify.app/blog/correlaciones/</link>
      <pubDate>Wed, 09 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/correlaciones/</guid>
      <description>&lt;p&gt;El análisis de correlación es una técnica estadística que nos permite &lt;strong&gt;identificar si existen relaciones lineales entre distintas variables.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Lo que hace una correlación es indicarnos si dos variables tienen una relación entre sí, en el sentido de que el aumento o disminución de una de las variables ocurra en concordancia con la otra variable, ya sea una &lt;strong&gt;correlación positiva&lt;/strong&gt; (si una variable aumenta, la otra también) o &lt;strong&gt;correlación negativa&lt;/strong&gt; (si una variable aumenta, la otra disminuye).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Controla las dimensiones de tus gráficos con {ggview}</title>
      <link>https://bastianoleah.netlify.app/blog/ggview/</link>
      <pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/ggview/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/idmn/ggview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;{ggview}&lt;/code&gt;&lt;/a&gt; es un paquete de R que te ayuda a crear gráficos en &lt;code&gt;{ggplot2}&lt;/code&gt; manteniendo un tamaño fijo.&lt;/p&gt;&#xA;&lt;p&gt;En RStudio, los gráficos que aparecen en el panel de gráficos (&lt;em&gt;Plots&lt;/em&gt;) se adaptan al tamaño de dicho panel. Por ejemplo, si tu panel es chico, el gráfico no tendría espacio para verse bien:&lt;/p&gt;&#xA;&lt;a href=&#34;grafico_chico.png&#34; target=&#34;_blank&#34;&gt;&#xA;&#xA;  &lt;img src=&#34;grafico_chico.png&#34; style=&#34;border-radius: 7px; width: 80%; max-width: 700px; display: block; margin: auto; margin-bottom: 8px; margin-top: 8px;&#34;&gt;&#xA;  &#xA;&lt;/a&gt;&#xA;&lt;p&gt;Pero si amplías el tamaño del panel lo suficiente, el gráfico se verá mejor:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualizando texto como nubes de palabras en R</title>
      <link>https://bastianoleah.netlify.app/blog/nubes_de_palabras/</link>
      <pubDate>Sat, 05 Jul 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/nubes_de_palabras/</guid>
      <description>&lt;p&gt;Una de las formas más intuitivas de visualizar datos de texto son las nubes de palabras. En las nubes de palabras seleccionamos un subconjunto de las palabras del texto que queremos analizar y las distribuimos en un gráfico, donde las palabras que aparecen más frecuentemente aparecen más grandes, y usualmente al centro. Sirven para ver rápidamente los conceptos clave de un documento o un corpus de documentos.&lt;/p&gt;&#xA;&lt;p&gt;En este post veremos dos formas de crear nubes de palabras con R: con &lt;code&gt;{wordcloud2}&lt;/code&gt; y con &lt;code&gt;{ggplot2}&lt;/code&gt;. Para empezar, necesitamos una base de datos que tenga información de texto; por ejemplo, una base donde cada fila contenga una respuesta abierta de una encuesta, una reseña de un producto, un párrafo de un texto, un capítulo de un libro, o un libro completo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gráficos para identificar datos outliers o anómalos en R</title>
      <link>https://bastianoleah.netlify.app/blog/2025-06-18/</link>
      <pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/2025-06-18/</guid>
      <description>&lt;link href=&#34;index_files/libs/htmltools-fill-0.5.8.1/fill.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/htmlwidgets-1.6.4/htmlwidgets.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-bundle-5.16.0/d3-bundle.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-lasso-0.0.5/d3-lasso.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/save-svg-as-png-1.4.17/save-svg-as-png.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/flatbush-4.4.0/flatbush.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link href=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/girafe-binding-0.8.10/girafe.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Los datos anómalos o &lt;em&gt;outliers&lt;/em&gt; son datos que se alejan considerablemente de los demás. Estos datos pueden resultar problemáticos para ciertos análisis, pueden ser indicio de errores en la recolección o limpieza de datos, o pueden requerir que tomemos ciertas decisiones para corregirlos o excluirlos.&lt;/p&gt;&#xA;&lt;p&gt;En este post &lt;strong&gt;simularemos un dataset&lt;/strong&gt; con datos anómalos, y luego mostraremos algunas formas de &lt;strong&gt;visualización de datos anómalos&lt;/strong&gt; &#xA;&lt;a href=&#34;../../../tags/ggplot2/&#34;&gt;en &lt;code&gt;{ggplot2}&lt;/code&gt;&lt;/a&gt; para tomar decisiones al respecto. Al final crearemos un &lt;strong&gt;gráfico interactivo&lt;/strong&gt; &#xA;&lt;a href=&#34;https://davidgohel.github.io/ggiraph/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;con &lt;code&gt;{ggiraph}&lt;/code&gt;&lt;/a&gt; que permita poner el cursor sobre las observaciones para obtener más información.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Unir y combinar gráficos {ggplot2} en R</title>
      <link>https://bastianoleah.netlify.app/blog/patchwork/</link>
      <pubDate>Sat, 08 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/patchwork/</guid>
      <description>&lt;p&gt;El paquete {patchwork} ayuda a unir y combinar múltiples gráficos de {ggplot2}. En esta guía veremos los principios del uso de este paquete, que nos permitirá construir visualizaciones más densas.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;dplyr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;ggplot2&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;patchwork&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Primero crearemos dos gráficos de muestra, a partir del dataset &lt;code&gt;iris&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;grafico_a&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;iris&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# calcular promedios por especie&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;group_by&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;Species&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;summarize&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;Sepal.Length&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;mean&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;Sepal.Length&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# gráfico&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;ggplot&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;aes&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;Sepal.Length&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;Species&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# barras&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;geom_col&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;fill&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;darkslategray3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;width&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;0.6&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;theme_void&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;grafico_b&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;iris&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# conteo por especies&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;Species&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# porcentaje&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;mutate&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;sum&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;n&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;|&amp;gt;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# gráfico&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;ggplot&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;aes&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;x&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;y&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;fill&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;Species&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;geom_col&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# escala de color&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;scale_fill_brewer&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;Set2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;qual&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6e6a86&#34;&gt;# gráfico de torta&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;coord_polar&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;theta&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;y&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;theme_void&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;+&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ea9a97&#34;&gt;guides&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;fill&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;guide_legend&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#3e8fb0&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&#xA;&lt;h3 id=&#34;combinar-dos-gráficos-lado-a-lado&#34;&gt;Combinar dos gráficos lado a lado&#xA;  &lt;a href=&#34;#combinar-dos-gr%c3%a1ficos-lado-a-lado&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;&#xA;      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;&#xA;    &lt;/svg&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;Gracias a {patchwork}, unir dos gráficos uno al lado del otro es tan sencillo como &amp;ldquo;sumarlos&amp;rdquo;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creación y personalización de colores y paletas en R</title>
      <link>https://bastianoleah.netlify.app/blog/colores/</link>
      <pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/colores/</guid>
      <description>&lt;p&gt;El uso del color es clave para comunicar, y el ecosistema de R tiene varios trucos convenientes para ayudarnos a usar el color de mejores formas.&lt;/p&gt;&#xA;&lt;p&gt;En R, los colores se escriben como código, y a grandes rasgos pueden ser colores con nombre (por ejemplo, &lt;code&gt;&amp;quot;purple&amp;quot;&lt;/code&gt;), colores hexadecimales (escritos como códigos de al menos 6 dígitos, como &lt;code&gt;#FFFFFF&lt;/code&gt;), o como parte de funciones que producen paletas de colores.&lt;/p&gt;&#xA;&lt;p&gt;A lo largo de este post usaremos la función &lt;code&gt;swatch()&lt;/code&gt; del paquete &lt;code&gt;{shades}&lt;/code&gt;, que genera un gráfico que presenta el color o la paleta de colores a partir de un vector de colores, lo que nos ayudará a visualizar nuestros colores más fácil. Una alternativa es la función &lt;code&gt;show_col()&lt;/code&gt; de &lt;code&gt;{scales}&lt;/code&gt;, que hace lo mismo.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rotar un mapa de Chile en R para que quede horizontal</title>
      <link>https://bastianoleah.netlify.app/blog/mapa_chile_horizontal/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/mapa_chile_horizontal/</guid>
      <description>&lt;p&gt;Visualizar un mapa de Chile puede ser complicado debido a su largo. Muchas veces cuesta ubicar correctamente el mapa por el espacio vertical que requiere. Pero en ciertos casos puede ser conveniente visualizar a Chile &lt;em&gt;de lado&lt;/em&gt;, para aprovechar el espacio horizontal. En esta guía veremos cómo rotar un mapa de Chile 90° hacia la izquierda en R para que quede acostado.&lt;/p&gt;&#xA;&lt;p&gt;Primero cargamos los paquetes necesarios:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;sf&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# manejo de datos espaciales&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;chilemapas&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# mapas de Chile&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;La documentacion del paquete y ejemplos de uso se encuentran en https://pacha.dev/chilemapas/.&#xA;Visita https://buymeacoffee.com/pacha/ si deseas donar para contribuir al desarrollo de este software.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;ggplot2&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# visualización de datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;dplyr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# manejo de datos tabulares&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Attaching package: &#39;dplyr&#39;&#xA;&#xA;The following objects are masked from &#39;package:stats&#39;:&#xA;&#xA;    filter, lag&#xA;&#xA;The following objects are masked from &#39;package:base&#39;:&#xA;&#xA;    intersect, setdiff, setequal, union&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;readr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#6e6a86&#34;&gt;# cargar datos&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Obtenemos un mapa de Chile gracias al paquete {chilemapas}; en este caso un mapa del país por regiones:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplificar la geometría de los polígonos de un mapa en R</title>
      <link>https://bastianoleah.netlify.app/blog/simplificar_mapas/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/simplificar_mapas/</guid>
      <description>&lt;p&gt;Un problema común al visualizar datos georeferenciados o mapas coropléticos (con colores en las zonas geográficas que se corresponden con los datos) yace en que usamos mapas que tienen geometrías o características geográficas mucho más detalladas de lo que necesitamos. Este exceso de detalle puede jugarle en contra a la visualización que estamos intentando crear, ya sea porque dificulta la interpretación, o complejiza visualmente el gráfico.&lt;/p&gt;&#xA;&lt;p&gt;Otro problema de trabajar con mapas muy detallados es que la velocidad con la que se generan se ve impactada debido al detalle, lo que resulta inconveniente dado que al visualizar datos usualmente nos encontramos iterando decenas de veces una misma visualización hasta que se vea como queremos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Video: Presentación de Visualizador de datos de Corrupción en Chile</title>
      <link>https://bastianoleah.netlify.app/blog/unim/presentacion_visualizador_datos_corrupcion/</link>
      <pubDate>Fri, 24 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/unim/presentacion_visualizador_datos_corrupcion/</guid>
      <description>&lt;p&gt;Exposición en la &lt;strong&gt;Universidad Internacional de la Municipalidad de Rancagua&lt;/strong&gt;, instancia organizada por el &lt;strong&gt;Programa de Gobierno Local Abierto&lt;/strong&gt; (GOBLA) de la Municipalidad de Rancagua.&lt;/p&gt;&#xA;&lt;p&gt;En esta presentación doy a conocer el &#xA;&lt;a href=&#34;https://bastianoleah.netlify.app/apps/corrupcion_chile&#34;&gt;visualizador de datos de Corrupción&lt;/a&gt;, explicando cómo fue el proceso de inspirarme a hacerlo, los desafíos que tuve durante su desarrollo, y la experiencia de colaboración y discusión en torno a un proyecto de datos que pueden ser polémicos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Actualización de app Análisis de prensa: visualización de análisis de sentimiento de noticias recientes</title>
      <link>https://bastianoleah.netlify.app/blog/2025-01-14/</link>
      <pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/2025-01-14/</guid>
      <description>&lt;h3 id=&#34;actualización-de-app-análisis-de-prensa-&#34;&gt;Actualización de app análisis de prensa 🗞️&#xA;  &lt;a href=&#34;#actualizaci%c3%b3n-de-app-an%c3%a1lisis-de-prensa-&#34;&gt;&lt;svg class=&#34;anchor-symbol&#34; aria-hidden=&#34;true&#34; height=&#34;26&#34; width=&#34;26&#34; viewBox=&#34;0 0 22 22&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&#xA;      &lt;path d=&#34;M0 0h24v24H0z&#34; fill=&#34;currentColor&#34;&gt;&lt;/path&gt;&#xA;      &lt;path d=&#34;M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76.0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71.0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71.0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76.0 5-2.24 5-5s-2.24-5-5-5z&#34;&gt;&lt;/path&gt;&#xA;    &lt;/svg&gt;&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Nuevo:&lt;/strong&gt; gráfico de análisis de sentimiento: elige un tema y revisa si las noticias recientes fueron mayormente positivas o negativas. Compara cómo distintos medios abordan las temáticas. ¡Pronto más detalle!&lt;/p&gt;&#xA;&lt;p&gt;&lt;img style = &#34;border-radius: 7px; width: 100%; max-width: 400px; display: block; margin: auto;&#34;&#xA;src = analisis_sentimiento_1.png&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Graba el proceso de tus visualizaciones de datos con {camcorder}</title>
      <link>https://bastianoleah.netlify.app/blog/camcorder/</link>
      <pubDate>Sat, 11 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/camcorder/</guid>
      <description>&lt;p&gt;El &#xA;&lt;a href=&#34;https://github.com/thebioengineer/camcorder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paquete de R {camcorder}&lt;/a&gt; te permite ir registrando todos los gráficos que hagas durante una sesión, y al final te entrega una animación que contiene el paso a paso de tu proceso de visualización de datos, desde el gráfico de {ggplot2} inicial hasta el producto final.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img style = &#34;border-radius: 7px; width: 100%; max-width: 400px; display: block; margin: auto;&#34;&#xA;src = &#34;camcorder1.webp&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Solo tienes que instalarlo y activarlo para que todos los gráficos que generes vayan siendo registrados automáticamente:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Portafolio de aplicaciones en R</title>
      <link>https://bastianoleah.netlify.app/blog/portafolio_apps/</link>
      <pubDate>Mon, 06 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/portafolio_apps/</guid>
      <description>&lt;p&gt;Portafolio de una selección de las aplicaciones públicas de visualización de datos que he desarrollado. Se trata de pequeñas aplicaciones web diseñadas para hacer más accesibles y comprensibles ciertos conjuntos de datos sobre temáticas sociales, políticas y socioeconómicas. Todas estas aplicaciones web fueron desarrolladas con R, y tanto el código de fuente como sus datos están disponibles de manera pública y abierta.&lt;/p&gt;&#xA;&lt;p&gt;Otra versión más detallada de este portafolio está disponible en este enlace: &#xA;&lt;a href=&#34;https://bastianolea.github.io/shiny_apps/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://bastianolea.github.io/shiny_apps/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crea un mapa de Chile y visualiza datos comunales y regionales con mapas en R</title>
      <link>https://bastianoleah.netlify.app/blog/tutorial_mapa_chile/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/tutorial_mapa_chile/</guid>
      <description>&lt;p&gt;Visualizar datos geográficamente es una herramienta de comunicación y análisis de datos muy potente. En este tutorial te explico cómo obtener mapas comunales y regionales de Chile en R, y cómo crear un gráficos que visualizan variables numéricas en las comunas y regiones del país. En pocos pasos puedes transformar tus datos territoriales en visualizaciones mucho más densas e informativas.&lt;/p&gt;&#xA;&lt;p&gt;Para crear mapas sencillos, donde una variable numérica se visualice en cada unidad territorial por medio de una escala de colores, solamente se necesitan dos cosas: la información geográfica que te permite visualizar el mapa en sí mismo, y los datos que podamos corresponder con las unidades territoriales del mapa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visualización y scraping de resultados en vivo de las elecciones municipales 2024</title>
      <link>https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/</link>
      <pubDate>Wed, 30 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://bastianoleah.netlify.app/blog/elecciones_municipales_2024/servel_resultados_multi_featured.png&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Con motivo de las elecciones municipales, estuve generando algunas visualizaciones ”en tiempo real” de los resultados de las elecciones de alcaldías. Los datos de conteo de votos los fui obteniendo minuto a minuto mediante web scraping con &lt;code&gt;{RSelenium}&lt;/code&gt;, que permite programar un navegador web para que interactúe con un sitio como si fuera humano. Entonces, el navegador robot (marioneta, le llaman) iba apretando todos los botones, sin intervención de mi parte, para encontrar y copiar los resultados de cada comuna del país.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tutorial: Mapa en {ggplot2} con calles desde Open Street Map</title>
      <link>https://bastianoleah.netlify.app/blog/tutorial_mapas_osm/</link>
      <pubDate>Tue, 03 Sep 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/tutorial_mapas_osm/</guid>
      <description>&lt;p&gt;En este tutorial crearemos un mapa de una región de Chile, y sobre el polígono geográfico aplicaremos otros elementos geográficos como calles, avenidas y carreteras, obtenidos desde Open Street Map (proveedor de mapas online abierto y comunitario).&lt;/p&gt;&#xA;&lt;p&gt;Esto puede servir para crear visualizaciones de datos espaciales minimalistas que de todos modos entreguen elementos urbanos de referencia para que les usuaries puedan ubicarse mejor espacialmente.&lt;/p&gt;&#xA;&lt;p&gt;Usaremos &lt;code&gt;{dplyr}&lt;/code&gt; para manipular los datos, el paquete &lt;code&gt;{ggplot2}&lt;/code&gt; para visualización de datos, &lt;code&gt;{sf}&lt;/code&gt; para tratamiento de elementos espaciales, &lt;code&gt;{rnaturalearth}&lt;/code&gt; para obtener mapas de cualquier país o región del mundo, y &lt;code&gt;{osmdata}&lt;/code&gt; para obtener datos estaciales desde Open Street Map (OSM) por medio de su API pública.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tutorial: Mapa de la zona urbana de la Región Metropolitana de Santiago en R</title>
      <link>https://bastianoleah.netlify.app/blog/tutorial_mapa_urbano/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://bastianoleah.netlify.app/blog/tutorial_mapa_urbano/</guid>
      <description>&lt;p&gt;Este tutorial de R te explicará paso a paso a cómo obtener mapas de todo Chile usando el paquete &#xA;&lt;a href=&#34;https://github.com/pachadotdev/chilemapas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;{chilemapas}&lt;/code&gt; desarrollado por Mauricio Vargas&lt;/a&gt;, y hacer gráficos con estos mapas usando &lt;code&gt;{ggplot2}&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;En la primera parte veremos cómo &lt;strong&gt;obtener los mapas&lt;/strong&gt; y cómo &lt;strong&gt;visualizar datos comunales&lt;/strong&gt; usando mapas en R.&lt;/p&gt;&#xA;&lt;p&gt;Luego, nos enfrentaremos a un problema común que se tiene al graficar un mapa de la Región Metropolitana de Santiago, que tiene que ver con la diferencia entre los límites comunales reales de cada comuna y los &lt;strong&gt;límites urbanos&lt;/strong&gt; de las comunas. Es la diferencia entre tener un mapa de la RM que abarque sectores rurales como Paine y que llegue hasta Argentina, o un mapa que demarque la zona urbana de Santiago, aproximadamente correspondiente a la zona que atravieza el anillo Vespucio.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
