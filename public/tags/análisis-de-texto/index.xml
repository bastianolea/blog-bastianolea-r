<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Análisis de texto on Blog</title>
    <link>http://localhost:6013/tags/an%C3%A1lisis-de-texto/</link>
    <description>Recent content in Análisis de texto on Blog</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Sat, 08 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:6013/tags/an%C3%A1lisis-de-texto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Resumir textos usando modelos de lenguaje (LLM) locales en R</title>
      <link>http://localhost:6013/blog/resumir_texto_llm/</link>
      <pubDate>Sat, 08 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:6013/blog/resumir_texto_llm/</guid>
      <description>&lt;p&gt;Los modelos de lenguaje (LLM) son herramientas muy útiles para analizar texto, y usarlos en tus análisis de datos con R es sencillo. Previamente en este blog ya he explicado cómo usar LLMs para &#xA;&lt;a href=&#34;../../../blog/analisis_sentimiento_llm/&#34;&gt;análisis de sentimiento&lt;/a&gt; y &#xA;&lt;a href=&#34;../../../tags/inteligencia-artificial/&#34;&gt;otros usos&lt;/a&gt;. En este tutorial, te enseño a utilizar modelos de lenguaje locales, instalados en tu propio computador, para obtener resúmenes de textos. Esto puede servir por si estás analizando una base de datos de texto que contenga textos de extensión larga, para los cuales sería conveniente tener una versión más breve. Por ejemplo, al analizar resultados de &#xA;&lt;a href=&#34;../../../tags/web-scraping/&#34;&gt;web scraping&lt;/a&gt;, conjuntos de &#xA;&lt;a href=&#34;../../../blog/2024-12-31/&#34;&gt;datos periodísticos o de noticias&lt;/a&gt;, datos de entrevistas, respuestas abiertas en encuestas, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Análisis de sentimiento usando modelos de lenguaje (LLM) locales en R</title>
      <link>http://localhost:6013/blog/analisis_sentimiento_llm/</link>
      <pubDate>Sun, 22 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:6013/blog/analisis_sentimiento_llm/</guid>
      <description>&lt;p&gt;El análisis de sentimientos es una técnica de análisis de texto donde se aplican distintos algoritmos para poder clasificar textos de distinta longitud y complejidad en un conjunto preestablecido de categorías relacionadas al sentimiento de dichos textos. Con el &lt;em&gt;sentimiento&lt;/em&gt; de los textos nos referimos a la información subjetiva que entregan estos textos, así como los afectos que producen. Por ejemplo, &amp;ldquo;odio a mi gato&amp;rdquo; versus &amp;ldquo;mi gatita es tan tierna&amp;rdquo; son dos textos que expresan distintos niveles de negatividad/positividad, agresividad, ternura, etcétera. Las categorías del análisis del sentimiento suelen ser &lt;em&gt;positivo, neutro&lt;/em&gt; y &lt;em&gt;negativo,&lt;/em&gt; u otras más complejas, como agrado (agradable/desagradable), activación (activo/pasivo), entre otros.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Predecir género a partir de nombres usando un modelo de lenguaje en R</title>
      <link>http://localhost:6013/blog/genero_nombres_llm/</link>
      <pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:6013/blog/genero_nombres_llm/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://bastianolea.rbind.io/blog/introduccion_llm_mall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hace poco&lt;/a&gt; conocí &#xA;&lt;a href=&#34;https://mlverse.github.io/mall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;el paquete &lt;code&gt;{mall}&lt;/code&gt;&lt;/a&gt;, que facilita mucho el uso de un un modelo de lenguaje (LLM) local como una herramienta cotidiana para el análisis y procesamiento de datos.&lt;/p&gt;&#xA;&lt;p&gt;El paquete incluye varias funciones para usar un modelo LLM local en las columnas de un dataframe. &lt;code&gt;{mall}&lt;/code&gt; te puede ayudar a :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;clasificar el contenido de una variable&lt;/li&gt;&#xA;&lt;li&gt;resumir textos&lt;/li&gt;&#xA;&lt;li&gt;extraer sentimiento a partir del texto&lt;/li&gt;&#xA;&lt;li&gt;extraer información desde el texto&lt;/li&gt;&#xA;&lt;li&gt;confirmar si algo es verdadero o falso a partir de un texto&lt;/li&gt;&#xA;&lt;li&gt;y también a aplicar cualquier &lt;em&gt;prompt&lt;/em&gt; a una variable.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Recientemente lo usé para un caso real, donde tenía una columna de casi 2.000 nombres, y necesitaba asignarle un género a cada una de estas personas, solamente a partir de sus nombres y apellidos.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Usar un modelo de lenguaje local (LLM) para analizar texto en R</title>
      <link>http://localhost:6013/blog/introduccion_llm_mall/</link>
      <pubDate>Tue, 29 Oct 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:6013/blog/introduccion_llm_mall/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://mlverse.github.io/mall/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Recientemente se lanzó el paquete &lt;code&gt;{mall}&lt;/code&gt;,&lt;/a&gt; que facilita el uso de un LLM &lt;em&gt;(large language model)&lt;/em&gt; o modelo de lenguaje de gran tamaño para analizar texto con IA en un dataframe. Esto significa que, para cualquier dataframe que tengamos, podemos aplicar un modelo de IA a una de sus columnas y recibir sus resultados en una columna nueva.&lt;/p&gt;&#xA;&lt;p&gt;Para poder hacer ésto, primero necitamos tener un modelo LLM instalado localmente en nuestra computadora. Para eso, &#xA;&lt;a href=&#34;https://ollama.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tenemos que instalar Ollama&lt;/a&gt;, y ejecutar la aplicación. Ollama tiene que estar abierto para poder proveer del modelo a nuestra sesión de R.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Análisis de prensa chilena</title>
      <link>http://localhost:6013/apps/prensa_chile/</link>
      <pubDate>Thu, 08 Aug 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:6013/apps/prensa_chile/</guid>
      <description>&lt;p&gt;Proyecto de ciencia de datos desarrollado en R para analizar texto de noticias chilenas. Comprende módulos para realizar web scraping de sitios web de prensa para obtener el texto de sus noticias, procesos para transformar ese texto en palabras (tokens), y procesos para analizar dicho corpus de palabras usando distintas técnicas estadísticas.&lt;/p&gt;&#xA;&lt;p&gt;Actualmente, el corpus de noticias obtenido supera las 800.000 noticias individuales, las cuales suman un total de 140 millones (!) de palabras, abarcando más de 30 fuentes periodísticas distintas.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
