<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automatización on Blog</title>
    <link>http://localhost:4321/tags/automatizaci%C3%B3n/</link>
    <description>Recent content in Automatización on Blog</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Mon, 07 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:4321/tags/automatizaci%C3%B3n/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Generar múltiples gráficos automáticamente con R</title>
      <link>http://localhost:4321/blog/2025-07-07/</link>
      <pubDate>Mon, 07 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/2025-07-07/</guid>
      <description>&lt;p&gt;Uno de los principales beneficios de usar programación para el análisis de datos es que &lt;strong&gt;el código es reutilizable.&lt;/strong&gt; esto significa que cualquier cosa que hayas hecho una vez, puedes volver a hacerla muy fácilmente, o cualquier cosa que hayas hecho antes puedes volver a usarla para hacer algo similar y así ahorrar mucho trabajo.&lt;/p&gt;&#xA;&lt;p&gt;En la visualización de datos, la reutilización de código resulta altamente conveniente. Una vez que has diseñado un gráfico, con muy pocas modificaciones puedes adaptarlo para que funcione con una fuente de datos distintas o actualizada, o para que exprese una variable distinta.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crea planillas de Excel con formato directamente desde R con {openxlsx}</title>
      <link>http://localhost:4321/blog/openxlsx/</link>
      <pubDate>Fri, 13 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/openxlsx/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://ycphs.github.io/openxlsx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://ycphs.github.io/openxlsx/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://www.r-bloggers.com/2024/11/creating-professional-excel-reports-with-r-a-comprehensive-guide-to-openxlsx-package/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.r-bloggers.com/2024/11/creating-professional-excel-reports-with-r-a-comprehensive-guide-to-openxlsx-package/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://guslipkin.medium.com/making-pretty-excel-files-in-r-46a15c7a2ee8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://guslipkin.medium.com/making-pretty-excel-files-in-r-46a15c7a2ee8&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generar contenido en serie usando loops en un reporte Quarto</title>
      <link>http://localhost:4321/blog/quarto_loop/</link>
      <pubDate>Sun, 08 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/quarto_loop/</guid>
      <description>&lt;p&gt;Una de las gracias de generar documentos en Quarto es que podemos combinar la redacción con el código. Pero esto puede ir más allá que simplemente escribir un párrafo de texto y seguido de un párrafo de código. Podemos usar código para literalmente generar texto, títulos y más.&lt;/p&gt;&#xA;&lt;p&gt;En otros tutoriales vimos cómo podemos &#xA;&lt;a href=&#34;../../../blog/quarto_reportes/#c%c3%b3digo-entre-el-texto&#34;&gt;incluir resultados del código dentro de nuestros párrafos de texto&lt;/a&gt;, por ejemplo, para que una cifra que esté dentro de una oración venga directamente del resultado de un cálculo en vez de tener que escribirle de forma manual. Pero en esta guía vamos a ver cómo podemos programar la generación masiva de títulos, párrafos y gráficos en base a una &#xA;&lt;a href=&#34;../../../blog/r_introduccion/r_intermedio/#bucles&#34;&gt;iteración, bucle o &lt;em&gt;loop&lt;/em&gt;.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
