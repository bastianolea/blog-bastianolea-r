<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Loops on Blog</title>
    <link>http://localhost:4321/tags/loops/</link>
    <description>Recent content in Loops on Blog</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Tue, 15 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:4321/tags/loops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Herramientas básicas para programar con R</title>
      <link>http://localhost:4321/blog/r_introduccion/r_intermedio/</link>
      <pubDate>Fri, 14 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/r_introduccion/r_intermedio/</guid>
      <description>&lt;p&gt;Esta es la segunda guía introductoria para aprender el lenguaje de programación R orientado al análisis de datos. &#xA;&lt;a href=&#34;../../../../blog/r_introduccion/r_basico/&#34;&gt;En la guía anterior vimos los principios más fundamentales del lenguaje R&lt;/a&gt;, para familiarizarnos con R y entender su funcionamiento básico. En esta segunda guía, seguiremos puliendo nuestros aprendizajes para aprender herramientas de programación poderosas que flexibilizarán mucho nuestras capacidades de análisis de datos, abriendo infinitas posibilidades.&lt;/p&gt;&#xA;&lt;p&gt;En esta guía, aprenderemos herramientas que nos permitirán a:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automatiza la generación de reportes creando documentos parametrizados con Quarto y R</title>
      <link>http://localhost:4321/blog/quarto_params/</link>
      <pubDate>Tue, 15 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/quarto_params/</guid>
      <description>&lt;p&gt;En este tutorial aprenderemos a crear reportes parametrizados con Quarto. Por parámetro nos referimos a un valor que podremos cambiar para alterar el resultado obtenido por un mismo reporte. Entonces, los &#xA;&lt;a href=&#34;https://posit.co/blog/parameterized-quarto/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reportes parametrizados&lt;/a&gt; nos permiten cambiar aspectos del output de un documento Quarto al cambiar una variable definida en el encabezado del mismo.&lt;/p&gt;&#xA;&lt;p&gt;De esta manera, podemos generar múltiples versiones de un mismo reporte simplemente cambiando el parámetro, por ejemplo, para diseñar un reporte con datos para un país, en base a un conjuntos de datos de múltiples países, y luego obtener múltiples versiones del mismo reporte pero para distintos países. O generar un reporte con datos de un año específico, y luego generar versiones del mismo reporte para distintos años.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crear contenido en serie usando loops en Quarto</title>
      <link>http://localhost:4321/blog/quarto_loop/</link>
      <pubDate>Thu, 27 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/quarto_loop/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://stackoverflow.com/a/61426087/4467386&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://stackoverflow.com/a/61426087/4467386&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Evitar que un loop se detenga debido a errores</title>
      <link>http://localhost:4321/blog/evitar_errores/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/evitar_errores/</guid>
      <description>&lt;p&gt;Usando el paquete &lt;code&gt;{purrr}&lt;/code&gt; para realizar iteraciones o &lt;em&gt;loops&lt;/em&gt; en nuestro código, vamos a probar tres escenarios ante los que un loop se detendría debido a un error, y formas de solucionarlo.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e0def4;background-color:#232136;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;library&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;purrr&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ea9a97&#34;&gt;números&lt;/span&gt; &lt;span style=&#34;color:#908caa&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span style=&#34;color:#ea9a97&#34;&gt;list&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f6c177&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;&amp;#34;error&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f6c177&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#908caa&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En el primer escenario, el loop intenta sumar &lt;code&gt;100&lt;/code&gt; a un vector de números, pero se encuentra con que uno de los números es un texto, por lo tanto la ejecución se detiene con un error:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
