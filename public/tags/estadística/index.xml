<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Estadística on Blog</title>
    <link>http://localhost:4321/tags/estad%C3%ADstica/</link>
    <description>Recent content in Estadística on Blog</description>
    <generator>Hugo</generator>
    <language>es-ES</language>
    <lastBuildDate>Tue, 01 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:4321/tags/estad%C3%ADstica/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mapas</title>
      <link>http://localhost:4321/blog/2025-07-01/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/2025-07-01/</guid>
      <description>&lt;!-- library(dplyr) --&gt;&#xA;&lt;!-- library(sf) --&gt;&#xA;&lt;!-- library(ggplot2) --&gt;&#xA;&lt;!-- library(janitor) --&gt;&#xA;&lt;!-- library(readr) --&gt;&#xA;&lt;!-- # comunas ide ---- --&gt;&#xA;&lt;!-- # https://www.ide.cl/index.php/noticias/actualizacion-de-la-cartografia-de-division-politica-administrativa-en-chile --&gt;&#xA;&lt;!-- # https://www.geoportal.cl/geoportal/catalog/download/912598ad-ac92-35f6-8045-098f214bd9c2 --&gt;&#xA;&lt;!-- mapa_comunas_ide &lt;- read_sf(&#34;shapes/ide_chile/DPA_2023/COMUNAS/&#34;) |&gt; clean_names()  --&gt;&#xA;&lt;!-- comunas_superficie &lt;- mapa_comunas_ide |&gt;  --&gt;&#xA;&lt;!--   mutate(superficie = units::set_units(geometry |&gt; st_area(), &#34;km^2&#34;)) |&gt;  --&gt;&#xA;&lt;!--   st_drop_geometry() |&gt;  --&gt;&#xA;&lt;!--   mutate(across(starts_with(&#34;cut_&#34;), as.numeric)) --&gt;&#xA;&lt;!-- # areas ---- --&gt;&#xA;&lt;!-- mapa_areas_pobladas &lt;- read_sf(&#34;shapes/bcn/Areas_Pobladas/&#34;) |&gt; clean_names() --&gt;&#xA;&lt;!-- mapa_comunas_bcn &lt;- read_sf(&#34;shapes/bcn/Comunas/&#34;) |&gt; clean_names() --&gt;&#xA;&lt;!-- mapa_areas_pobladas |&gt;  --&gt;&#xA;&lt;!--   ggplot() + --&gt;&#xA;&lt;!--   aes() + --&gt;&#xA;&lt;!--   geom_sf() --&gt;&#xA;&lt;!-- mapa_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   ggplot() + --&gt;&#xA;&lt;!--   aes() + --&gt;&#xA;&lt;!--   geom_sf() --&gt;&#xA;&lt;!-- mapa_comunas_bcn_filt &lt;- mapa_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   filter(comuna == &#34;Arica&#34;)  --&gt;&#xA;&lt;!-- mapa_areas_pobladas_filt &lt;- mapa_areas_pobladas |&gt;  --&gt;&#xA;&lt;!--   filter(comuna == &#34;Arica&#34;) --&gt;&#xA;&lt;!-- mapa_comunas_bcn_filt |&gt;  --&gt;&#xA;&lt;!--   ggplot() + --&gt;&#xA;&lt;!--   geom_sf() + --&gt;&#xA;&lt;!--   geom_sf(data = mapa_areas_pobladas_filt, fill = &#34;grey30&#34;) --&gt;&#xA;&lt;!-- #  --&gt;&#xA;&lt;!-- # # unir areas pobladas en comunas --&gt;&#xA;&lt;!-- # mapa_areas_pobladas_comunas &lt;- mapa_areas_pobladas |&gt;  --&gt;&#xA;&lt;!-- #   mutate(superficie_area_poblada = units::set_units(geometry |&gt; st_area(), &#34;km^2&#34;)) |&gt;  --&gt;&#xA;&lt;!-- #   group_by(comuna) |&gt;  --&gt;&#xA;&lt;!-- #   summarize(superficie_area_poblada = sum(superficie_area_poblada), --&gt;&#xA;&lt;!-- #             geometry = st_union(geometry)) --&gt;&#xA;&lt;!-- # left_join(mapa_comunas_bcn |&gt; st_drop_geometry(), --&gt;&#xA;&lt;!-- #           mapa_areas_pobladas_comunas |&gt; st_drop_geometry(), --&gt;&#xA;&lt;!-- #           by = &#34;comuna&#34;) |&gt;  --&gt;&#xA;&lt;!-- #   filter(is.na(cod_comuna)) --&gt;&#xA;&lt;!-- # unir geográficamente mapa de comunas con el mapa de áreas pobladas --&gt;&#xA;&lt;!-- # resultados &lt;- st_join(mapa_comunas_bcn, mapa_areas_pobladas_comunas) --&gt;&#xA;&lt;!-- mapas_unidos &lt;- st_join(mapa_areas_pobladas, mapa_comunas_bcn) --&gt;&#xA;&lt;!-- mapas_unidos_comunas &lt;- mapas_unidos |&gt;  --&gt;&#xA;&lt;!--   group_by(comuna.y, cod_comuna, codregion) |&gt; --&gt;&#xA;&lt;!--   summarize(geometry = st_union(geometry)) |&gt;  --&gt;&#xA;&lt;!--   ungroup() --&gt;&#xA;&lt;!-- superficie_comunas &lt;- mapas_unidos_comunas |&gt;  --&gt;&#xA;&lt;!--   mutate(superficie_area_poblada = units::set_units(geometry |&gt; st_area(), &#34;km^2&#34;)) --&gt;&#xA;&lt;!-- mapa_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   filter(!cod_comuna %in% resultado$cod_comuna) --&gt;&#xA;&lt;!-- superficie_comunas |&gt; filter(comuna.y == &#34;Arica&#34;) --&gt;&#xA;&lt;!-- mapa_comunas_bcn |&gt; filter(comuna == &#34;Arica&#34;) --&gt;&#xA;&lt;!-- superficie_comunas |&gt; filter(comuna.y == &#34;San José de Maipo&#34;) --&gt;&#xA;&lt;!-- superficie_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(comuna.y, &#34;Dichato&#34;)) --&gt;&#xA;&lt;!-- superficie_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(comuna.y, &#34;Tom&#34;)) --&gt;&#xA;&lt;!-- superficie_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(comuna.y, &#34;Alhué&#34;)) --&gt;&#xA;&lt;!-- superficie_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(comuna.y, &#34;Puente&#34;)) --&gt;&#xA;&lt;!-- # mapa_areas_pobladas |&gt;  --&gt;&#xA;&lt;!-- #   filter(stringr::str_detect(localidad, &#34;Caleta&#34;)) --&gt;&#xA;&lt;!-- comunas_superficie_area_poblada |&gt;  --&gt;&#xA;&lt;!--   filter(is.na(cut_com)) --&gt;&#xA;&lt;!-- mapa_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   filter(comuna == &#34;San José de Maipo&#34;) |&gt;  --&gt;&#xA;&lt;!--   ggplot() + --&gt;&#xA;&lt;!--   geom_sf() + --&gt;&#xA;&lt;!--   geom_sf(data = mapa_areas_pobladas |&gt;  --&gt;&#xA;&lt;!--             filter(comuna == &#34;San José de Maipo&#34;),  --&gt;&#xA;&lt;!--           fill = &#34;grey30&#34;) --&gt;&#xA;&lt;!-- mapa_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   filter(comuna == &#34;San José de Maipo&#34;) |&gt;  --&gt;&#xA;&lt;!--   ggplot() + --&gt;&#xA;&lt;!--   geom_sf() + --&gt;&#xA;&lt;!--   geom_sf(data = resultado |&gt;  --&gt;&#xA;&lt;!--             filter(comuna.y == &#34;San José de Maipo&#34;),  --&gt;&#xA;&lt;!--           fill = &#34;grey30&#34;) --&gt;&#xA;&lt;!-- codigos_comunas_bcn |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(tolower(comuna), &#34;puente&#34;)) --&gt;&#xA;&lt;!-- mapa_areas_pobladas_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(stringr::str_detect(tolower(comuna), &#34;puente&#34;)) --&gt;&#xA;&lt;!-- mapa_areas_pobladas_comunas |&gt;  --&gt;&#xA;&lt;!--   filter(!comuna %in% sort(codigos_comunas_bcn$comuna)) --&gt;&#xA;&lt;!-- # pero pero pero y las zonas urbanas del censo??? --&gt;&#xA;&lt;!-- # guardar --&gt;&#xA;&lt;!-- superficie_comunas |&gt;  --&gt;&#xA;&lt;!--   st_drop_geometry() |&gt;  --&gt;&#xA;&lt;!--   select(codigo_comuna = cod_comuna, superficie_area_poblada) |&gt;  --&gt;&#xA;&lt;!--   readr::write_rds(&#34;datos/superficie_comunas_area_poblada.rds&#34;) --&gt;</description>
    </item>
    <item>
      <title>Gráficos para identificar datos outliers o anómalos en R</title>
      <link>http://localhost:4321/blog/2025-06-18/</link>
      <pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/2025-06-18/</guid>
      <description>&lt;link href=&#34;index_files/libs/htmltools-fill-0.5.8.1/fill.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/htmlwidgets-1.6.4/htmlwidgets.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-bundle-5.16.0/d3-bundle.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/d3-lasso-0.0.5/d3-lasso.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/save-svg-as-png-1.4.17/save-svg-as-png.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/flatbush-4.4.0/flatbush.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;link href=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.css&#34; rel=&#34;stylesheet&#34; /&gt;&#xA;&lt;script src=&#34;index_files/libs/ggiraphjs-0.8.10/ggiraphjs.min.js&#34;&gt;&lt;/script&gt;&#xA;&lt;script src=&#34;index_files/libs/girafe-binding-0.8.13/girafe.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Los datos anómalos o &lt;em&gt;outliers&lt;/em&gt; son datos que se alejan considerablemente de los demás. Estos datos pueden resultar problemáticos para ciertos análisis, pueden ser indicio de errores en la recolección o limpieza de datos, o pueden requerir que tomemos ciertas decisiones para corregirlos o excluirlos.&lt;/p&gt;&#xA;&lt;p&gt;En este post &lt;strong&gt;simularemos un dataset&lt;/strong&gt; con datos anómalos, y luego mostraremos algunas formas de &lt;strong&gt;visualización de datos anómalos&lt;/strong&gt; &#xA;&lt;a href=&#34;../../../tags/ggplot2/&#34;&gt;en &lt;code&gt;{ggplot2}&lt;/code&gt;&lt;/a&gt; para tomar decisiones al respecto. Al final crearemos un &lt;strong&gt;gráfico interactivo&lt;/strong&gt; &#xA;&lt;a href=&#34;https://davidgohel.github.io/ggiraph/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;con &lt;code&gt;{ggiraph}&lt;/code&gt;&lt;/a&gt; que permita poner el cursor sobre las observaciones para obtener más información.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Aplicando una regresión lineal en la vida diaria: predecir kilómetros por recorrer en bicicleta</title>
      <link>http://localhost:4321/blog/regresion_ciclismo/</link>
      <pubDate>Tue, 03 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/regresion_ciclismo/</guid>
      <description>&lt;p&gt;No soy una persona muy cercana a la estadística, pero el día de hoy por primera vez se me ocurrió aplicar una regresión lineal para responder una pregunta de mi vida cotidiana.&lt;/p&gt;&#xA;&lt;p&gt;Resulta que un compañero del ultraciclismo, el &#xA;&lt;a href=&#34;https://www.instagram.com/aenederrese/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;destacado ciclista Andrés Arias&lt;/a&gt;, preguntó en su Instagram si alguien podía predecir cuántos kilómetros va a recorrer este 2024 durante el desafío &#xA;&lt;a href=&#34;https://content.rapha.cc/us/en/story/festive500&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rapha Festive 500&lt;/a&gt;, un desafío del que participamos muchos ciclistas, que consiste en recorrer 500 km en bicicleta entre el 24 y el 31 de diciembre&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cargar y explorar datos de la encuesta Casen en R, usando factor de expansión</title>
      <link>http://localhost:4321/blog/casen_introduccion/</link>
      <pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:4321/blog/casen_introduccion/</guid>
      <description>&lt;p&gt;Este post ejemplifica tres formas de cargar y explorar los datos de la encuesta Casen 2022, la &#xA;&lt;a href=&#34;https://observatorio.ministeriodesarrollosocial.gob.cl/encuesta-casen-2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Encuesta de caracterización socioeconómica nacional&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Veremos cómo obtener resultados de la Casen a nivel de país, región y comuna, usando dos formas de aplicar el factor de expansión. El factor de expansión es necesario de aplicar para transformar los resultados de la muestra de la encuesta a cifras que tienen representación a los distintos niveles de agrupación geográfica.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
