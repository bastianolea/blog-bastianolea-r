{
  "hash": "97c3cfa3a63646c82554b537c5fa97fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Mapa de Chile Horizontal\nauthor: Bastián Olea Herrera\nformat:\n  hugo-md:\n    output-file: \"index\"\n    output-ext: \"md\"\ndate: '2025-03-03'\nslug: []\ncategories: []\ntags:\n  - mapas\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(chilemapas)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLa documentacion del paquete y ejemplos de uso se encuentran en https://pacha.dev/chilemapas/.\nVisita https://buymeacoffee.com/pacha/ si deseas donar para contribuir al desarrollo de este software.\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# obtener mapa\nmapa_region <- chilemapas::generar_regiones() |>\n  # agregar etiquetas de nombres\n  left_join(chilemapas::codigos_territoriales |> select(nombre_region, codigo_region) |> distinct()) |> \n  # simplificar geometrías\n  mutate(geometry = rmapshaper::ms_simplify(geometry, keep = 0.05))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nJoining with `by = join_by(codigo_region)`\n```\n\n\n:::\n\n```{.r .cell-code}\nmapa_region\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 16 features and 2 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -109.4499 ymin: -55.90564 xmax: -66.42766 ymax: -17.49778\nGeodetic CRS:  SIRGAS 2000\n# A tibble: 16 × 3\n   codigo_region                                          geometry nombre_region\n * <chr>                                            <GEOMETRY [°]> <chr>        \n 1 01            POLYGON ((-69.8277 -21.43974, -69.76408 -21.4205… Tarapaca     \n 2 02            POLYGON ((-70.65729 -26.061, -70.61916 -26.061, … Antofagasta  \n 3 03            POLYGON ((-70.65729 -26.061, -70.65284 -26.13138… Atacama      \n 4 04            POLYGON ((-71.49029 -29.18023, -71.43958 -29.253… Coquimbo     \n 5 05            MULTIPOLYGON (((-71.53671 -32.17856, -71.51582 -… Valparaiso   \n 6 06            POLYGON ((-71.35858 -34.82726, -71.28045 -34.791… Libertador G…\n 7 07            POLYGON ((-72.10308 -36.13219, -72.09964 -36.125… Maule        \n 8 08            MULTIPOLYGON (((-71.64118 -38.30825, -71.63324 -… Biobio       \n 9 09            POLYGON ((-73.50881 -38.48375, -73.50329 -38.593… La Araucania \n10 10            MULTIPOLYGON (((-74.13783 -42.21779, -74.17136 -… Los Lagos    \n11 11            MULTIPOLYGON (((-74.42907 -44.89151, -74.45496 -… Aysen del Ge…\n12 12            MULTIPOLYGON (((-73.96809 -48.71665, -74.03006 -… Magallanes y…\n13 13            POLYGON ((-70.47653 -33.86032, -70.47327 -33.862… Metropolitan…\n14 14            MULTIPOLYGON (((-71.88244 -40.56879, -71.85858 -… Los Rios     \n15 15            POLYGON ((-68.95687 -18.94477, -68.91604 -18.890… Arica y Pari…\n16 16            POLYGON ((-72.88606 -36.44326, -72.80998 -36.459… Nuble        \n```\n\n\n:::\n\n```{.r .cell-code}\nmapa_proyectado <- mapa_region |> \n  st_set_geometry(mapa_region$geometry)\n# proyección sirgas 2000 (crs 4674)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmapa_proyectado |> \n  ggplot(aes()) +\n  geom_sf() +\n  guides(fill = guide_none()) +\n  coord_sf(xlim = c(-80, -62))\n```\n\n::: {.cell-output-display}\n![](mapa_chile_horizontal.markdown_strict_files/figure-markdown_strict/unnamed-chunk-3-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# rotar mapa de Chile ----\n\n# https://gist.github.com/ryanpeek/99c6935ae51429761f5f73cf3b027da2\n# rotate function (see here: https://r-spatial.github.io/sf/articles/sf3.html#affine-transformations\n# se multiplica la geometría por una matriz de rotación, porque como es un mapa está en espacio euclideano\n# https://en.wikipedia.org/wiki/Rotation_matrix\n# rotate <- function(a) matrix(c(cos(a), sin(a), -sin(a), cos(a)), 2, 2) #debiese definirse así, pero sale deformado\n\n# 1. Reprojectar a CRS proyectado (EPSG:5361 para Chile)\nmapa_proyectado <- st_transform(mapa_region, 5361)\n\n# 2. Matriz de rotación 90° izquierda (sin escalar)\nrotacion <- matrix(c(0, -1, 1, 0), 2, 2)\n\n# 3. Aplicar rotación al mapa proyectado\nmapa_rotado <- mapa_proyectado |> \n  mutate(geometry = geometry * rotacion)\n\n# Visualizar\nmapa_rotado |> \n  ggplot() +\n  geom_sf() +\n  scale_y_continuous(labels = scales::label_number()) +\n  coord_sf(ylim = c(800000, -200000)) +\n  labs(title = \"Mapa de Chile horizontal\",\n       subtitle = \"A mimir\") +\n  theme(plot.margin = unit(rep(.2, 4), \"cm\"))\n```\n\n::: {.cell-output-display}\n![](mapa_chile_horizontal.markdown_strict_files/figure-markdown_strict/unnamed-chunk-4-1.png){width=768}\n:::\n\n```{.r .cell-code}\n# Reproyección (EPSG:5361): Transformamos el mapa a un sistema de coordenadas proyectadas (Lambert Conic para Chile), donde las unidades son metros.\n# Matriz de rotación pura: Usamos una matriz estándar para rotación de 90° sin escalar (0.85 en tu código original causaba distorsión).\n# Aplicar rotación: La rotación se realiza sobre coordenadas métricas, evitando deformaciones.\n# Si el mapa aparece desplazado, calcula el centroide y rota alrededor de este usando transformaciones afines. Pero con este código, la proporción y forma del mapa se mantendrán correctas.\n```\n:::\n",
    "supporting": [
      "mapa_chile_horizontal.markdown_strict_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}